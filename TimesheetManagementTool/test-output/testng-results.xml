<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[===Connect to server===]]>
    </line>
    <line>
      <![CDATA[===Connect to database===]]>
    </line>
    <line>
      <![CDATA[ Launching chrome browser ]]>
    </line>
    <line>
      <![CDATA[===close the connection with database]]>
    </line>
    <line>
      <![CDATA[===close the server connection===]]>
    </line>
  </reporter-output>
  <suite started-at="2024-06-11T01:00:05Z" name="Default suite" finished-at="2024-06-11T01:00:28Z" duration-ms="23667">
    <groups>
      <group name="FT">
        <method signature="InvalidLoginTest.invalidLogin()[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" name="invalidLogin" class="TestScript.InvalidLoginTest"/>
      </group> <!-- FT -->
    </groups>
    <test started-at="2024-06-11T01:00:05Z" name="Default test" finished-at="2024-06-11T01:00:28Z" duration-ms="23667">
      <class name="TestScript.InvalidLoginTest">
        <test-method is-config="true" signature="serverConnection()[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" started-at="2024-06-11T01:00:05Z" name="serverConnection" finished-at="2024-06-11T01:00:05Z" duration-ms="22" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[===Connect to server===]]>
            </line>
          </reporter-output>
        </test-method> <!-- serverConnection -->
        <test-method is-config="true" signature="dbConnection()[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" started-at="2024-06-11T01:00:05Z" name="dbConnection" finished-at="2024-06-11T01:00:05Z" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[===Connect to database===]]>
            </line>
          </reporter-output>
        </test-method> <!-- dbConnection -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" started-at="2024-06-11T01:00:05Z" name="setup" finished-at="2024-06-11T01:00:07Z" duration-ms="2251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ Launching chrome browser ]]>
            </line>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="invalidLogin()[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" started-at="2024-06-11T01:00:07Z" name="invalidLogin" description="Verify the user is able to login with different set of data or not" finished-at="2024-06-11T01:00:28Z" duration-ms="20930" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='usern']"}
  (Session info: chrome=125.0.6422.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [14b30a70833042a9238a7a7077bb21c5, findElement {using=name, value=usern}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.142, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\AMANSI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57787}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57787/devtoo..., se:cdpVersion: 125.0.6422.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 14b30a70833042a9238a7a7077bb21c5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='usern']"}
  (Session info: chrome=125.0.6422.142)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [14b30a70833042a9238a7a7077bb21c5, findElement {using=name, value=usern}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.142, chrome: {chromedriverVersion: 125.0.6422.141 (4b1e8393712..., userDataDir: C:\Users\AMANSI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57787}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57787/devtoo..., se:cdpVersion: 125.0.6422.142, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 14b30a70833042a9238a7a7077bb21c5
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:364)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.sendKeys(Unknown Source)
at PomPages.LoginPage.invalidLogin(LoginPage.java:69)
at TestScript.InvalidLoginTest.invalidLogin(InvalidLoginTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" started-at="2024-06-11T01:00:28Z" name="tearDown" finished-at="2024-06-11T01:00:28Z" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeDatabaseConnection()[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" started-at="2024-06-11T01:00:28Z" name="closeDatabaseConnection" finished-at="2024-06-11T01:00:28Z" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[===close the connection with database]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeDatabaseConnection -->
        <test-method is-config="true" signature="closeServerConnection()[pri:0, instance:TestScript.InvalidLoginTest@7a220c9a]" started-at="2024-06-11T01:00:28Z" name="closeServerConnection" finished-at="2024-06-11T01:00:28Z" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[===close the server connection===]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeServerConnection -->
      </class> <!-- TestScript.InvalidLoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
